name: CI

on:
  - push
  - pull_request

jobs:
  packaging:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Make setuptools_scm able to guess the version.
          # actions/checkout#249
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Ensure pip is up to date
        run: |
          python -m pip install --upgrade pip

      - name: Build
        run: |
          python -m pip install pep517
          python -m pep517.build .

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  test-packages:
    needs: packaging
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9.0-rc.1 - 3.9'
        file-extension:
          - .tar.gz
          - .whl
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test
        run: |
          python -m pip install dist/*${{ matrix.file-extension }}
          ffffff --version

  release:
    needs: test-packages
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install twine
          twine upload dist/*

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

  test-pre-commit-installable:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9.0-rc.1 - 3.9'
    steps:
      - uses: actions/checkout@v2
        with:
          # Make setuptools_scm able to guess the version.
          # actions/checkout#249
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test
        run: |
          python -m pip install .
          ffffff --version
